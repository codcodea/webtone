import * as solid_js from 'solid-js';
import { Accessor, JSX, ValidComponent } from 'solid-js';
import { e as Placement, f as PopperRoot, P as PopperArrow } from '../popper-root-07fed9c2.js';
export { a as PopperArrowCommonProps, b as PopperArrowOptions, c as PopperArrowProps, d as PopperArrowRenderProps, g as PopperRootOptions, h as PopperRootProps } from '../popper-root-07fed9c2.js';
import { PolymorphicProps } from '../polymorphic/index.js';
import '@kobalte/utils';

interface PopperContextValue {
    currentPlacement: Accessor<Placement>;
    contentRef: Accessor<HTMLElement | undefined>;
    setPositionerRef: (el: HTMLElement) => void;
    setArrowRef: (el: HTMLElement) => void;
}
declare const PopperContext: solid_js.Context<PopperContextValue | undefined>;
declare function usePopperContext(): PopperContextValue;

interface PopperPositionerOptions {
}
interface PopperPositionerCommonProps {
    ref: HTMLElement | ((el: HTMLElement) => void);
    /** The HTML styles attribute (object form only). */
    style?: JSX.CSSProperties;
}
interface PopperPositionerRenderProps extends PopperPositionerCommonProps {
    "data-popper-positioner": "";
}
type PopperPositionerProps = PopperPositionerOptions & Partial<PopperPositionerCommonProps>;
/**
 * The wrapper component that positions the popper content relative to the popper anchor.
 */
declare function PopperPositioner<T extends ValidComponent = "div">(props: PolymorphicProps<T, PopperPositionerProps>): JSX.Element;

declare const Popper: typeof PopperRoot & {
    Arrow: typeof PopperArrow;
    Context: solid_js.Context<PopperContextValue | undefined>;
    usePopperContext: typeof usePopperContext;
    Positioner: typeof PopperPositioner;
};

export { PopperArrow as Arrow, PopperContext as Context, Popper, PopperContextValue, PopperPositionerCommonProps, PopperPositionerOptions, PopperPositionerProps, PopperPositionerRenderProps, PopperPositioner as Positioner, PopperRoot as Root, usePopperContext };
