import { F as FormControlDataSet, a as FormControlDescription, b as FormControlErrorMessage, c as FormControlDescriptionCommonProps, d as FormControlDescriptionOptions, e as FormControlDescriptionProps, f as FormControlDescriptionRenderProps, g as FormControlErrorMessageCommonProps, h as FormControlErrorMessageOptions, i as FormControlErrorMessageProps, j as FormControlErrorMessageRenderProps } from './form-control-error-message-43231f32.js';
import * as solid_js from 'solid-js';
import { JSX, ValidComponent } from 'solid-js';
import { PolymorphicProps } from './polymorphic/index.js';
import { Orientation, ValidationState } from '@kobalte/utils';

interface RadioGroupItemDataSet {
    "data-valid": string | undefined;
    "data-invalid": string | undefined;
    "data-required": string | undefined;
    "data-disabled": string | undefined;
    "data-readonly": string | undefined;
    "data-checked": string | undefined;
}

interface RadioGroupItemOptions {
    /**
     * The value of the radio button, used when submitting an HTML form.
     * See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/radio#Value).
     */
    value: string;
    /** Whether the radio button is disabled or not. */
    disabled?: boolean;
}
interface RadioGroupItemCommonProps {
    id: string;
    onPointerDown: JSX.EventHandlerUnion<HTMLElement, PointerEvent>;
}
interface RadioGroupItemRenderProps extends RadioGroupItemCommonProps, RadioGroupItemDataSet {
    role: "group";
}
type RadioGroupItemProps = RadioGroupItemOptions & Partial<RadioGroupItemCommonProps>;
/**
 * The root container for a radio button.
 */
declare function RadioGroupItem<T extends ValidComponent = "div">(props: PolymorphicProps<T, RadioGroupItemProps>): JSX.Element;

interface RadioGroupItemControlOptions {
}
interface RadioGroupItemControlCommonProps {
    id: string;
    onClick: JSX.EventHandlerUnion<HTMLElement, MouseEvent>;
    onKeyDown: JSX.EventHandlerUnion<HTMLElement, KeyboardEvent>;
}
interface RadioGroupItemControlRenderProps extends RadioGroupItemControlCommonProps, RadioGroupItemDataSet {
}
type RadioGroupItemControlProps = RadioGroupItemControlOptions & Partial<RadioGroupItemControlCommonProps>;
/**
 * The element that visually represents a radio button.
 */
declare function RadioGroupItemControl<T extends ValidComponent = "div">(props: PolymorphicProps<T, RadioGroupItemControlProps>): JSX.Element;

interface RadioGroupItemDescriptionOptions {
}
interface RadioGroupItemDescriptionCommonProps {
    id: string;
}
interface RadioGroupItemDescriptionRenderProps extends RadioGroupItemDescriptionCommonProps, RadioGroupItemDataSet {
}
type RadioGroupItemDescriptionProps = RadioGroupItemDescriptionOptions & Partial<RadioGroupItemDescriptionCommonProps>;
/**
 * The description that gives the user more information on the radio button.
 */
declare function RadioGroupItemDescription<T extends ValidComponent = "div">(props: PolymorphicProps<T, RadioGroupItemDescriptionProps>): solid_js.JSX.Element;

interface RadioGroupItemIndicatorOptions {
    /**
     * Used to force mounting when more control is needed.
     * Useful when controlling animation with SolidJS animation libraries.
     */
    forceMount?: boolean;
}
interface RadioGroupItemIndicatorCommonProps {
    id: string;
    ref: HTMLElement | ((el: HTMLElement) => void);
}
interface RadioGroupItemIndicatorRenderProps extends RadioGroupItemIndicatorCommonProps, RadioGroupItemDataSet {
}
type RadioGroupItemIndicatorProps = RadioGroupItemIndicatorOptions & Partial<RadioGroupItemIndicatorCommonProps>;
/**
 * The visual indicator rendered when the radio item is in a checked state.
 * You can style this element directly, or you can use it as a wrapper to put an icon into, or both.
 */
declare function RadioGroupItemIndicator<T extends ValidComponent = "div">(props: PolymorphicProps<T, RadioGroupItemIndicatorProps>): solid_js.JSX.Element;

interface RadioGroupItemInputOptions {
    /** The HTML styles attribute (object form only). */
    style?: JSX.CSSProperties;
}
interface RadioGroupItemInputCommonProps {
    id: string;
    ref: HTMLInputElement | ((el: HTMLInputElement) => void);
    "aria-labelledby": string | undefined;
    "aria-describedby": string | undefined;
    onChange: JSX.EventHandlerUnion<HTMLInputElement, Event>;
    onFocus: JSX.EventHandlerUnion<HTMLElement, FocusEvent>;
    onBlur: JSX.EventHandlerUnion<HTMLElement, FocusEvent>;
    "aria-label"?: string;
    style: JSX.CSSProperties;
}
interface RadioGroupItemInputRenderProps extends RadioGroupItemInputCommonProps, RadioGroupItemDataSet {
    type: "radio";
    name: string;
    value: string;
    checked: boolean;
    required: boolean | undefined;
    disabled: boolean | undefined;
    readonly: boolean | undefined;
}
type RadioGroupItemInputProps = RadioGroupItemInputOptions & Partial<RadioGroupItemInputCommonProps>;
/**
 * The native html input that is visually hidden in the radio button.
 */
declare function RadioGroupItemInput<T extends ValidComponent = "input">(props: PolymorphicProps<T, RadioGroupItemInputProps>): JSX.Element;

interface RadioGroupItemLabelOptions {
}
interface RadioGroupItemLabelCommonProps {
    id: string;
}
interface RadioGroupItemLabelRenderProps extends RadioGroupItemLabelCommonProps, RadioGroupItemDataSet {
    for: string | undefined;
}
type RadioGroupItemLabelProps = RadioGroupItemLabelOptions & Partial<RadioGroupItemLabelCommonProps>;
/**
 * The label that gives the user information on the radio button.
 */
declare function RadioGroupItemLabel<T extends ValidComponent = "label">(props: PolymorphicProps<T, RadioGroupItemLabelProps>): solid_js.JSX.Element;

interface RadioGroupLabelOptions {
}
interface RadioGroupLabelCommonProps {
}
interface RadioGroupLabelRenderProps extends RadioGroupLabelCommonProps {
}
type RadioGroupLabelProps = RadioGroupLabelOptions & Partial<RadioGroupLabelCommonProps>;
/**
 * The label that gives the user information on the radio group.
 */
declare function RadioGroupLabel<T extends ValidComponent = "span">(props: PolymorphicProps<T, RadioGroupLabelProps>): solid_js.JSX.Element;

interface RadioGroupRootOptions {
    /** The controlled value of the radio button to check. */
    value?: string;
    /**
     * The value of the radio button that should be checked when initially rendered.
     * Useful when you do not need to control the state of the radio buttons.
     */
    defaultValue?: string;
    /** Event handler called when the value changes. */
    onChange?: (value: string) => void;
    /** The axis the radio group items should align with. */
    orientation?: Orientation;
    /**
     * A unique identifier for the component.
     * The id is used to generate id attributes for nested components.
     * If no id prop is provided, a generated id will be used.
     */
    id?: string;
    /**
     * The name of the radio group.
     * Submitted with its owning form as part of a name/value pair.
     */
    name?: string;
    /** Whether the radio group should display its "valid" or "invalid" visual styling. */
    validationState?: ValidationState;
    /** Whether the user must select an item before the owning form can be submitted. */
    required?: boolean;
    /** Whether the radio group is disabled. */
    disabled?: boolean;
    /** Whether the radio group is read only. */
    readOnly?: boolean;
}
interface RadioGroupRootCommonProps {
    id: string;
    ref: HTMLElement | ((el: HTMLElement) => void);
    "aria-labelledby": string | undefined;
    "aria-describedby": string | undefined;
    "aria-label"?: string;
}
interface RadioGroupRootRenderProps extends RadioGroupRootCommonProps, FormControlDataSet {
    role: "radiogroup";
    "aria-invalid": boolean | undefined;
    "aria-required": boolean | undefined;
    "aria-disabled": boolean | undefined;
    "aria-readonly": boolean | undefined;
    "aria-orientation": Orientation | undefined;
}
type RadioGroupRootProps = RadioGroupRootOptions & Partial<RadioGroupRootCommonProps>;
/**
 * A set of checkable buttons, known as radio buttons, where no more than one of the buttons can be checked at a time.
 * This component is based on the [WAI-ARIA Radio Group Pattern](https://www.w3.org/WAI/ARIA/apg/patterns/radiobutton/)
 */
declare function RadioGroupRoot<T extends ValidComponent = "div">(props: PolymorphicProps<T, RadioGroupRootProps>): solid_js.JSX.Element;

declare const RadioGroup: typeof RadioGroupRoot & {
    Description: typeof FormControlDescription;
    ErrorMessage: typeof FormControlErrorMessage;
    Item: typeof RadioGroupItem;
    ItemControl: typeof RadioGroupItemControl;
    ItemDescription: typeof RadioGroupItemDescription;
    ItemIndicator: typeof RadioGroupItemIndicator;
    ItemInput: typeof RadioGroupItemInput;
    ItemLabel: typeof RadioGroupItemLabel;
    Label: typeof RadioGroupLabel;
};

declare const index_RadioGroup: typeof RadioGroup;
type index_RadioGroupItemCommonProps = RadioGroupItemCommonProps;
type index_RadioGroupItemControlCommonProps = RadioGroupItemControlCommonProps;
type index_RadioGroupItemControlOptions = RadioGroupItemControlOptions;
type index_RadioGroupItemControlProps = RadioGroupItemControlProps;
type index_RadioGroupItemControlRenderProps = RadioGroupItemControlRenderProps;
type index_RadioGroupItemDescriptionCommonProps = RadioGroupItemDescriptionCommonProps;
type index_RadioGroupItemDescriptionOptions = RadioGroupItemDescriptionOptions;
type index_RadioGroupItemDescriptionProps = RadioGroupItemDescriptionProps;
type index_RadioGroupItemDescriptionRenderProps = RadioGroupItemDescriptionRenderProps;
type index_RadioGroupItemIndicatorCommonProps = RadioGroupItemIndicatorCommonProps;
type index_RadioGroupItemIndicatorOptions = RadioGroupItemIndicatorOptions;
type index_RadioGroupItemIndicatorProps = RadioGroupItemIndicatorProps;
type index_RadioGroupItemIndicatorRenderProps = RadioGroupItemIndicatorRenderProps;
type index_RadioGroupItemInputCommonProps = RadioGroupItemInputCommonProps;
type index_RadioGroupItemInputOptions = RadioGroupItemInputOptions;
type index_RadioGroupItemInputProps = RadioGroupItemInputProps;
type index_RadioGroupItemInputRenderProps = RadioGroupItemInputRenderProps;
type index_RadioGroupItemLabelCommonProps = RadioGroupItemLabelCommonProps;
type index_RadioGroupItemLabelOptions = RadioGroupItemLabelOptions;
type index_RadioGroupItemLabelProps = RadioGroupItemLabelProps;
type index_RadioGroupItemLabelRenderProps = RadioGroupItemLabelRenderProps;
type index_RadioGroupItemOptions = RadioGroupItemOptions;
type index_RadioGroupItemProps = RadioGroupItemProps;
type index_RadioGroupItemRenderProps = RadioGroupItemRenderProps;
type index_RadioGroupLabelCommonProps = RadioGroupLabelCommonProps;
type index_RadioGroupLabelOptions = RadioGroupLabelOptions;
type index_RadioGroupLabelProps = RadioGroupLabelProps;
type index_RadioGroupLabelRenderProps = RadioGroupLabelRenderProps;
type index_RadioGroupRootCommonProps = RadioGroupRootCommonProps;
type index_RadioGroupRootOptions = RadioGroupRootOptions;
type index_RadioGroupRootProps = RadioGroupRootProps;
type index_RadioGroupRootRenderProps = RadioGroupRootRenderProps;
declare namespace index {
  export {
    FormControlDescription as Description,
    FormControlErrorMessage as ErrorMessage,
    RadioGroupItem as Item,
    RadioGroupItemControl as ItemControl,
    RadioGroupItemDescription as ItemDescription,
    RadioGroupItemIndicator as ItemIndicator,
    RadioGroupItemInput as ItemInput,
    RadioGroupItemLabel as ItemLabel,
    RadioGroupLabel as Label,
    index_RadioGroup as RadioGroup,
    FormControlDescriptionCommonProps as RadioGroupDescriptionCommonProps,
    FormControlDescriptionOptions as RadioGroupDescriptionOptions,
    FormControlDescriptionProps as RadioGroupDescriptionProps,
    FormControlDescriptionRenderProps as RadioGroupDescriptionRenderProps,
    FormControlErrorMessageCommonProps as RadioGroupErrorMessageCommonProps,
    FormControlErrorMessageOptions as RadioGroupErrorMessageOptions,
    FormControlErrorMessageProps as RadioGroupErrorMessageProps,
    FormControlErrorMessageRenderProps as RadioGroupErrorMessageRenderProps,
    index_RadioGroupItemCommonProps as RadioGroupItemCommonProps,
    index_RadioGroupItemControlCommonProps as RadioGroupItemControlCommonProps,
    index_RadioGroupItemControlOptions as RadioGroupItemControlOptions,
    index_RadioGroupItemControlProps as RadioGroupItemControlProps,
    index_RadioGroupItemControlRenderProps as RadioGroupItemControlRenderProps,
    index_RadioGroupItemDescriptionCommonProps as RadioGroupItemDescriptionCommonProps,
    index_RadioGroupItemDescriptionOptions as RadioGroupItemDescriptionOptions,
    index_RadioGroupItemDescriptionProps as RadioGroupItemDescriptionProps,
    index_RadioGroupItemDescriptionRenderProps as RadioGroupItemDescriptionRenderProps,
    index_RadioGroupItemIndicatorCommonProps as RadioGroupItemIndicatorCommonProps,
    index_RadioGroupItemIndicatorOptions as RadioGroupItemIndicatorOptions,
    index_RadioGroupItemIndicatorProps as RadioGroupItemIndicatorProps,
    index_RadioGroupItemIndicatorRenderProps as RadioGroupItemIndicatorRenderProps,
    index_RadioGroupItemInputCommonProps as RadioGroupItemInputCommonProps,
    index_RadioGroupItemInputOptions as RadioGroupItemInputOptions,
    index_RadioGroupItemInputProps as RadioGroupItemInputProps,
    index_RadioGroupItemInputRenderProps as RadioGroupItemInputRenderProps,
    index_RadioGroupItemLabelCommonProps as RadioGroupItemLabelCommonProps,
    index_RadioGroupItemLabelOptions as RadioGroupItemLabelOptions,
    index_RadioGroupItemLabelProps as RadioGroupItemLabelProps,
    index_RadioGroupItemLabelRenderProps as RadioGroupItemLabelRenderProps,
    index_RadioGroupItemOptions as RadioGroupItemOptions,
    index_RadioGroupItemProps as RadioGroupItemProps,
    index_RadioGroupItemRenderProps as RadioGroupItemRenderProps,
    index_RadioGroupLabelCommonProps as RadioGroupLabelCommonProps,
    index_RadioGroupLabelOptions as RadioGroupLabelOptions,
    index_RadioGroupLabelProps as RadioGroupLabelProps,
    index_RadioGroupLabelRenderProps as RadioGroupLabelRenderProps,
    index_RadioGroupRootCommonProps as RadioGroupRootCommonProps,
    index_RadioGroupRootOptions as RadioGroupRootOptions,
    index_RadioGroupRootProps as RadioGroupRootProps,
    index_RadioGroupRootRenderProps as RadioGroupRootRenderProps,
    RadioGroupRoot as Root,
  };
}

export { RadioGroupLabelRenderProps as A, RadioGroupLabelProps as B, RadioGroupRootOptions as C, RadioGroupRootCommonProps as D, RadioGroupRootRenderProps as E, RadioGroupRootProps as F, RadioGroupItem as G, RadioGroupItemControl as H, RadioGroupItemDescription as I, RadioGroupItemIndicator as J, RadioGroupItemInput as K, RadioGroupItemLabel as L, RadioGroupLabel as M, RadioGroupRoot as N, RadioGroup as O, RadioGroupItemControlOptions as R, RadioGroupItemControlCommonProps as a, RadioGroupItemControlRenderProps as b, RadioGroupItemControlProps as c, RadioGroupItemDescriptionOptions as d, RadioGroupItemDescriptionCommonProps as e, RadioGroupItemDescriptionRenderProps as f, RadioGroupItemDescriptionProps as g, RadioGroupItemIndicatorOptions as h, index as i, RadioGroupItemIndicatorCommonProps as j, RadioGroupItemIndicatorRenderProps as k, RadioGroupItemIndicatorProps as l, RadioGroupItemInputOptions as m, RadioGroupItemInputCommonProps as n, RadioGroupItemInputRenderProps as o, RadioGroupItemInputProps as p, RadioGroupItemLabelOptions as q, RadioGroupItemLabelCommonProps as r, RadioGroupItemLabelRenderProps as s, RadioGroupItemLabelProps as t, RadioGroupItemOptions as u, RadioGroupItemCommonProps as v, RadioGroupItemRenderProps as w, RadioGroupItemProps as x, RadioGroupLabelOptions as y, RadioGroupLabelCommonProps as z };
